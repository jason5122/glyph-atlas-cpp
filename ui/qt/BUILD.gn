import("//build/config/linux/pkg_config.gni")

# Qt system paths taken from here:
# https://github.com/Vertexwahn/rules_qt6/blob/main/qt_mac_aarch64.BUILD

action("generate_moc") {
  script = "moc_wrapper.py"
  inputs = [ "main_widget.h" ]
  outputs = [ "$root_gen_dir/qt6/qt_shim_moc.cc" ]
  args = rebase_path(inputs + outputs, root_build_dir)

  moc_path = ""
  if (is_mac) {
    moc_path = "/opt/homebrew/share/qt/libexec"
  }
  if (is_linux) {
    moc_path = "/usr/lib64/qt6/libexec"
  }

  if (moc_path != "") {
    args += [
      "--path",
      moc_path,
    ]
  }
}

source_set("qt") {
  sources = [
    "editor_window_qt.cc",
    "main_widget.cc",
  ]
  sources += get_target_outputs(":generate_moc")

  if (is_mac) {
    frameworks = [
      "QtCore.framework",
      "QtGui.framework",
      "QtWidgets.framework",
      "QtOpenGLWidgets.framework",
    ]
    framework_dirs = [ "/opt/homebrew/lib" ]
    public_configs = [ ":qt_includes" ]
  }
  if (is_linux) {
    public_configs = [ ":qt6_pkg_config" ]
  }

  deps = [
    ":generate_moc",
    "//ui/renderer",
    "//util",
  ]
}

config("qt_includes") {
  include_dirs = [
    "/opt/homebrew/include/QtCore",
    "/opt/homebrew/include/QtGui",
    "/opt/homebrew/include/QtWidgets",
    "/opt/homebrew/include/QtOpenGLWidgets",
  ]
  cflags = [ "-F/opt/homebrew/lib" ]
}

if (is_linux) {
  pkg_config("qt6_pkg_config") {
    packages = [
      "Qt6Core",
      "Qt6Gui",
      "Qt6Widgets",
      "Qt6OpenGLWidgets",
    ]
  }
}
