import("//build/config/linux/pkg_config.gni")

action("generate_moc") {
  script = "moc_wrapper.py"
  inputs = [ "editor_window_qt.h" ]
  outputs = [ "$root_gen_dir/qt5/qt_shim_moc.cc" ]
  args = rebase_path(inputs + outputs, root_build_dir)

  moc_path = ""
  if (is_mac) {
    moc_path = "/opt/homebrew/opt/qt@5/bin"
  }
  if (is_linux) {
    moc_path = "/usr/bin"
  }
  args += [
    "--path",
    moc_path,
  ]
}

source_set("qt") {
  sources = [ "editor_window_qt.cc" ]

  frameworks = [
    "QtWidgets.framework",
    "QtCore.framework",
  ]
  framework_dirs = [ "/opt/homebrew/Cellar/qt@5/5.15.12/lib" ]

  public_configs = [ ":qt_includes" ]

  # sources += get_target_outputs(":generate_moc")
  # deps = [ ":generate_moc" ]
}

config("qt_includes") {
  cflags = [ "-F/opt/homebrew/Cellar/qt@5/5.15.12/lib" ]
  include_dirs = [
    "/opt/homebrew/Cellar/qt@5/5.15.12/lib/QtWidgets.framework/Headers",
    "/opt/homebrew/Cellar/qt@5/5.15.12/lib/QtCore.framework/Headers",
  ]
}

if (is_linux) {
  pkg_config("qt6_config") {
    packages = [
      "QtCore",
      "QtWidgets",
    ]
  }
}
