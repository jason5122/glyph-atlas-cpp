action_foreach("generate_dispatch_sources") {
  script = "src/gen_dispatch.py"

  args = [
    "--source",
    "--no-header",
    "--outputdir",
    rebase_path("$root_gen_dir/third_party/libepoxy/src", root_build_dir),
    "{{source}}",
  ]

  sources = [ "registry/gl.xml" ]
  if (is_linux) {
    sources += [
      "registry/egl.xml",
      "registry/glx.xml",
    ]
  }
  if (is_win) {
    sources += [ "registry/wgl.xml" ]
  }

  outputs = [ "$root_gen_dir/third_party/libepoxy/src/{{source_name_part}}_generated_dispatch.c" ]
}

action_foreach("generate_dispatch_headers") {
  script = "src/gen_dispatch.py"

  args = [
    "--header",
    "--no-source",
    "--outputdir",
    rebase_path("$root_gen_dir/third_party/libepoxy/src/epoxy", root_build_dir),
    "{{source}}",
  ]

  sources = [ "registry/gl.xml" ]
  if (is_linux) {
    sources += [
      "registry/egl.xml",
      "registry/glx.xml",
    ]
  }
  if (is_win) {
    sources += [ "registry/wgl.xml" ]
  }

  outputs = [ "$root_gen_dir/third_party/libepoxy/src/epoxy/{{source_name_part}}_generated.h" ]
}

static_library("libepoxy") {
  sources = [ "src/dispatch_common.c" ]
  defines = [ "ENABLE_X11=1" ]

  if (is_linux) {
    sources += [
      "src/dispatch_egl.c",
      "src/dispatch_glx.c",
    ]
    defines += [
      "ENABLE_EGL=1",
      "ENABLE_GLX=1",
    ]
  }

  sources += get_target_outputs(":generate_dispatch_sources")

  libs = [
    "EGL",
    "GL",
    "GLESv2",
    "GLESv1_CM",
    "X11",
  ]

  public_configs = [ ":libepoxy_includes" ]

  deps = [
    ":generate_dispatch_headers",
    ":generate_dispatch_sources",
  ]
}

config("libepoxy_includes") {
  include_dirs = [
    "src",
    "include",
  ]
}
